Set-3


Consider the following table for student database:
Teacher(TeacherId, TName, Department)
Student(RollNo, SName, DOB, SAddress)
Teaches(TeacherId, RollNo, Subject)

Write the following queries:
1. Create the above mentioned tables in SQL. Specify primary and foreign key.
2. Insert 5 rows in each table.
3. Retrieve the following:
a) List the name and address of student registered for the subject DBMS.
b) List the name of teacher and their concerened department who are offering either DBMS or EVS.
c) List thge name of student who are being taught by the techers of CS department.
d) Insert a new field in the relation student as Course and check that course is not integer.
e) Find out the age of each student and add it as a new field in the relation student.
f) Find out the subjects taught by a teacher grouped by the teacher name.
g) List the students whose age below 20 years
h) list the name of teachers of CS department who are not teaching DBMS to the students whose address is delhi.

1. CREATE TABLE Teacher (
    TeacherId INT PRIMARY KEY,
    TName VARCHAR(50),
    Department VARCHAR(50)
);

CREATE TABLE Student (
    RollNo INT PRIMARY KEY,
    SName VARCHAR(50),
    DOB DATE,
    SAddress VARCHAR(100)
);

CREATE TABLE Teaches (
    TeacherId INT,
    RollNo INT,
    Subject VARCHAR(50),
    PRIMARY KEY(TeacherId, RollNo),
    FOREIGN KEY(TeacherId) REFERENCES Teacher(TeacherId),
    FOREIGN KEY(RollNo) REFERENCES Student(RollNo)
);


2. -- inserting rows in Teacher table
INSERT INTO Teacher (TeacherId, TName, Department) VALUES 
    (101, 'John Doe', 'CS'),
    (102, 'Jane Smith', 'Math'),
    (103, 'Peter Parker', 'CS'),
    (104, 'Mary Johnson', 'Economics'),
    (105, 'David Lee', 'Chemistry');

-- inserting rows in Student table
INSERT INTO Student (RollNo, SName, DOB, SAddress) VALUES 
    (1, 'Alice Brown', '2002-05-01', 'Delhi'),
    (2, 'Bob Davis', '2001-10-15', 'Mumbai'),
    (3, 'Charlie Green', '2003-03-25', 'Bangalore'),
    (4, 'David Johnson', '2002-08-08', 'Kolkata'),
    (5, 'Emily Wilson', '2001-12-31', 'Chennai');

-- inserting rows in Teaches table
INSERT INTO Teaches (TeacherId, RollNo, Subject) VALUES 
    (101, 1, 'DBMS'),
    (101, 2, 'DBMS'),
    (103, 3, 'DBMS'),
    (104, 4, 'EVS'),
    (105, 5, 'Chemistry');



3.
a)SELECT SName, SAddress 
FROM Student 
WHERE RollNo IN (SELECT RollNo FROM Teaches WHERE Subject = 'DBMS');

b) 
SELECT TName, Department 
FROM Teacher 
WHERE TeacherId IN (
    SELECT TeacherId 
    FROM Teaches 
    WHERE Subject IN ('DBMS', 'EVS')
);


c) 
SELECT SName 
FROM Student 
WHERE RollNo IN (
    SELECT RollNo 
    FROM Teaches 
    WHERE TeacherId IN (
        SELECT TeacherId 
        FROM Teacher 
        WHERE Department = 'CS'
    )
);



d)
ALTER TABLE Student 
ADD Course VARCHAR(50) NOT NULL 
CHECK (Course NOT LIKE '%[0-9]%');

e)
ALTER TABLE Student ADD Age INT;
UPDATE Student SET Age = YEAR(GETDATE()) - YEAR(DOB);


f)
SELECT TName, GROUP_CONCAT(Subject) AS Subjects 
FROM Teacher 
INNER JOIN Teaches ON Teacher.TeacherId = Teaches.TeacherId 
GROUP BY TName;

g)
SELECT SName 
FROM Student 
WHERE YEAR(GETDATE()) - YEAR(DOB) < 20;


h)
SELECT TName 
FROM Teacher 
WHERE Department = 'CS' AND TeacherId NOT IN (
    SELECT TeacherId 
    FROM Teaches 
    WHERE Subject = 'DBMS' AND RollNo IN (
        SELECT RollNo 
        FROM Student 
        WHERE SAddress = 'Delhi'
    )
);




